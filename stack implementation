/* stack implementation using static array*/
#include<stdio.h>
#include<stdlib.h>
#define size 5
int stack[size],top=-1;
void push(int);
void pop();
void peek();
void traverse();
int main()
{
	int ch,data;
	while(1)
	{
		printf("1. push \n");
		printf("2. pop \n");
		printf("3. peek \n");
		printf("4. traverse \n");
		printf("5. exit \n");
		printf("Enter your choice : ");
		scanf("%d",&ch);
		switch(ch)
		{
			case 1:
				printf("enter the data : ");
				scanf("%d",&data);
				push(data);
				break;
			case 2:
				pop();
				break;
			case 3:
				peek();
				break;
			case 4:
				traverse();
				break;
			case 5:
				exit(1);
				break;
			default:
				printf("entered wrong choice \n");
					
				
		}
		
	}
	return 0;
}
void push(int item)//to insert an element
{
	if(top==size-1)
	{
		printf("stck overflow \n");
	}
	else
	{
		top++;
		stack[top]=item;
		printf("pushed element %d \n",item);
		
	}
}
void pop()//to delete an element
{
	if(top==-1)
	{
		printf("Stack underflow\n");
		
	}
	else
	{
		printf("poped element : %d \n",stack[top--]);
	}
}
void peek()//to find the element at top of list
{
	if(top==-1)
	{
		printf("No element\n");
	}
	else
	{
		printf("%d is peak element \n",stack[top]);
	}
}
void traverse()
{
	if(top==-1)
	{
		printf("No element\n");
		
	}
	else
	{
		int i;
		printf("\nElemnts are :\n");
		for(i=0;i<=top;i++)
		{
			printf("%d\n",stack[i]);
		}
	}
}
